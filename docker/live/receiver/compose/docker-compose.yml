version: "2"
networks:
  app_bridge:
    driver: bridge
services:
  # nginx service - handles incoming requests to the server and forwards to app if applicable
  nginx:
    image: nginx
    container_name: nginx-container
    restart: always
    ports: 
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - jeepee
      # - streamer
    networks:
      - app_bridge
      
  # jeepee receiver service - application, sits behind nginx and controls the pins, and monitoring modules
  jeepee:
    image: siouija/jeepee-receiver
    container_name: jeepee-receiver-container
    privileged: true # required so we can interact with the pins
    restart: always
    networks:
      - app_bridge
    volumes:
      - ./hardware.json:/jeepee/app/hardware.json:ro
      
  # jeepee streamer service - hosts the uv4l service with webrtc enabled    
  # streamer:
  #   image: siouija/jeepee-streamer
  #   container_name: jeepee-streamer-container
  #   privileged: true
  #   restart: always
  #   ports:
  #     - "8080:8080"
  #   networks: 
  #     - app_bridge 
  #   volumes:
  #     - ./uv4l-raspicam.conf:/etc/uv4l/uv4l-raspicam.conf:ro